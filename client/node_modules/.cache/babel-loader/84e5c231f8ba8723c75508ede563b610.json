{"ast":null,"code":"var _jsxFileName = \"/Users/celine_wan/Documents/Projects/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Track from './Track';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '7ee6e0d5591a43529a41c604207bde27'\n});\nexport default function Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  console.log(searchResults);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumCover = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) {\n            return image;\n          }\n\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumCover.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: 'auto'\n      },\n      children: [\"Songs\", searchResults.map(track => {\n        /*#__PURE__*/\n        _jsxDEV(Track, {\n          track: track\n        }, track.uri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"Z2Gwgh21IOX6Mc5b1iJy+jBr3GI=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/celine_wan/Documents/Projects/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","Container","Form","useAuth","SpotifyWebApi","Track","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","console","log","setAccessToken","cancel","searchTracks","then","res","body","tracks","items","map","track","smallestAlbumCover","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","minHeight","e","target","value","overflowY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Track from './Track';\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: '7ee6e0d5591a43529a41c604207bde27',\n})\n\nexport default function Dashboard({code}) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  console.log(searchResults)\n\n  useEffect(() => {\n    if(!accessToken) return \n    spotifyApi.setAccessToken(accessToken)\n  }, [accessToken])\n\n  useEffect(() => {\n    if(!search) return setSearchResults([])\n    if(!accessToken) return\n\n    let cancel = false;\n\n    spotifyApi.searchTracks(search).then(res => {\n      \n      if (cancel) return\n      setSearchResults(res.body.tracks.items.map(track => {\n\n        const smallestAlbumCover = track.album.images.reduce((smallest,image)=>{\n          if (image.height < smallest.height){\n            return image\n          }\n          return smallest\n        }, track.album.images[0])\n\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumCover.url         \n        }\n      }))\n    })\n\n    return () => (cancel = true)\n  }, [search, accessToken])\n\n  return (\n    <Container className='d-flex flex-column py-2' style={{minHeight: '100vh'}}>\n        <Form.Control \n            type='search' \n            placeholder='Search'\n            value={search} \n            onChange={e => setSearch(e.target.value)}\n        />\n       <div className='flex-grow-1 my-2' style={{overflowY: 'auto'}}>\n            Songs\n            {searchResults.map(track => {\n                <Track track={track} key={track.uri}/>\n            })}\n        </div>\n        <div>Bottom</div>\n    </Container>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}