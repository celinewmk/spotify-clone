{"ast":null,"code":"var _jsxFileName = \"/Users/celine_wan/Documents/Projects/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '7ee6e0d5591a43529a41c604207bde27'\n});\nexport default function Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\"); //   console.log(search)\n  //   console.log(accessToken)\n  //   const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]); //   useEffect(() => {\n  //     if(!search) return setSearchResults([])\n  //     if(!accessToken) return\n  //     spotifyApi.searchTracks(search).then(res => {\n  //         setSearchResults(res.body.tracks.items.map(track => {\n  //         const smallestAlbumImage = track.album.images.reduce(\n  //             (smallest, image) => {\n  //               if (image.height < smallest.height) return image\n  //               return smallest\n  //             }, track.album.images[0])\n  //            return {\n  //                artist: track.artists[0].name,\n  //                title: track.name,\n  //                uri: track.uri,\n  //                albumUrl: smallestAlbumImage.url\n  //            }\n  //        }))\n  //     })\n  //   }, [search, accessToken])\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: 'auto'\n      },\n      children: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"KKCwExZRSPBp/msgVNZFCrWnpaM=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/celine_wan/Documents/Projects/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","Container","Form","useAuth","SpotifyWebApi","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","setAccessToken","minHeight","e","target","value","overflowY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,UAAU,GAAG,IAAID,aAAJ,CAAkB;AACjCE,EAAAA,QAAQ,EAAE;AADuB,CAAlB,CAAnB;AAIA,eAAe,SAASC,SAAT,OAA2B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AACxC,QAAMC,WAAW,GAAGN,OAAO,CAACK,IAAD,CAA3B;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC,CAFwC,CAG1C;AACA;AACA;;AAGEC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACS,WAAJ,EAAiB;AACjBJ,IAAAA,UAAU,CAACO,cAAX,CAA0BH,WAA1B;AACD,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT,CARwC,CAa1C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,yBAArB;AAA+C,IAAA,KAAK,EAAE;AAACI,MAAAA,SAAS,EAAE;AAAZ,KAAtD;AAAA,4BACI,QAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,QAFhB;AAGI,MAAA,KAAK,EAAEH,MAHX;AAII,MAAA,QAAQ,EAAEI,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAOG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPH,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlDuBV,S;UACFJ,O;;;KADEI,S","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node';\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: '7ee6e0d5591a43529a41c604207bde27',\n})\n\nexport default function Dashboard({code}) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n//   console.log(search)\n//   console.log(accessToken)\n//   const [searchResults, setSearchResults] = useState([]);\n\n\n  useEffect(() => {\n    if(!accessToken) return \n    spotifyApi.setAccessToken(accessToken)\n  }, [accessToken])\n\n//   useEffect(() => {\n//     if(!search) return setSearchResults([])\n//     if(!accessToken) return\n\n//     spotifyApi.searchTracks(search).then(res => {\n//         setSearchResults(res.body.tracks.items.map(track => {\n//         const smallestAlbumImage = track.album.images.reduce(\n//             (smallest, image) => {\n//               if (image.height < smallest.height) return image\n//               return smallest\n//             }, track.album.images[0])\n          \n//            return {\n//                artist: track.artists[0].name,\n//                title: track.name,\n//                uri: track.uri,\n//                albumUrl: smallestAlbumImage.url\n//            }\n//        }))\n//     })\n//   }, [search, accessToken])\n\n  return (\n    <Container className='d-flex flex-column py-2' style={{minHeight: '100vh'}}>\n        <Form.Control \n            type='search' \n            placeholder='Search'\n            value={search} \n            onChange={e => setSearch(e.target.value)}\n        />\n       <div className='flex-grow-1 my-2' style={{overflowY: 'auto'}}>\n            Songs\n        </div>\n        <div>Bottom</div>\n    </Container>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}