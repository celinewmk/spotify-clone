{"ast":null,"code":"var _jsxFileName = \"/Users/celine_wan/Documents/Projects/spotify-clone/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node'; // const spotifyApi = new SpotifyWebApi({\n//     clientId: '7ee6e0d5591a43529a41c604207bde27',\n// })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code); //   const [search, setSearch] = useState('');\n  //   const [query, setQuery] = useState([]);\n  //   useEffect(() => {\n  //     if(!accessToken) return \n  //     spotifyApi.setAccessToken(accessToken)\n  //   }, [accessToken])\n  //   useEffect(() => {\n  //     if(!query) return setQuery([])\n  //     if(!accessToken) return\n  //     spotifyApi.searchTracks(search).then(res => {\n  //         console.log(res)\n  //     })\n  //   }, [search, accessToken])\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: 'auto'\n      },\n      children: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"9BhjABTGdsx5UqlGELDU38D4Q3A=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/celine_wan/Documents/Projects/spotify-clone/client/src/Dashboard.js"],"names":["React","useState","useEffect","Container","Form","useAuth","SpotifyWebApi","Dashboard","code","accessToken","minHeight","search","e","setSearch","target","value","overflowY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B,C,CAEA;AACA;AACA;;;AAGA,eAAe,SAASC,SAAT,OAA2B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AACxC,QAAMC,WAAW,GAAGJ,OAAO,CAACG,IAAD,CAA3B,CADwC,CAE1C;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEE,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,yBAArB;AAA+C,IAAA,KAAK,EAAE;AAACE,MAAAA,SAAS,EAAE;AAAZ,KAAtD;AAAA,4BACI,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,WAAW,EAAC,QAAxC;AACI,MAAA,KAAK,EAAEC,MADX;AACmB,MAAA,QAAQ,EAAEC,CAAC,IAAIC,SAAS,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAD3C;AAAA;AAAA;AAAA;AAAA,YADJ,eAGG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BuBT,S;UACFF,O;;;KADEE,S","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport useAuth from './useAuth'\nimport SpotifyWebApi from 'spotify-web-api-node';\n\n// const spotifyApi = new SpotifyWebApi({\n//     clientId: '7ee6e0d5591a43529a41c604207bde27',\n// })\n\n\nexport default function Dashboard({code}) {\n  const accessToken = useAuth(code);\n//   const [search, setSearch] = useState('');\n//   const [query, setQuery] = useState([]);\n\n//   useEffect(() => {\n//     if(!accessToken) return \n//     spotifyApi.setAccessToken(accessToken)\n//   }, [accessToken])\n\n//   useEffect(() => {\n//     if(!query) return setQuery([])\n//     if(!accessToken) return\n\n//     spotifyApi.searchTracks(search).then(res => {\n//         console.log(res)\n//     })\n//   }, [search, accessToken])\n\n  return (\n    <Container className='d-flex flex-column py-2' style={{minHeight: '100vh'}}>\n        <Form.Control type='search' placeholder='Search'\n            value={search} onChange={e => setSearch(e.target.value)}/>\n       <div className='flex-grow-1 my-2' style={{overflowY: 'auto'}}>\n            Songs\n        </div>\n        <div>Bottom</div>\n    </Container>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}